// Code generated by protoc-gen-go. DO NOT EDIT.
// source: car.proto

/*
Package car is a generated protocol buffer package.

It is generated from these files:
	car.proto

It has these top-level messages:
	Car
	CreateCarRequest
	CreateCarResponse
	ListCarRequest
	ListCarResponse
*/
package car

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateCarRequest_Color int32

const (
	CreateCarRequest_BLACK CreateCarRequest_Color = 0
	CreateCarRequest_WHITE CreateCarRequest_Color = 1
	CreateCarRequest_RED   CreateCarRequest_Color = 2
)

var CreateCarRequest_Color_name = map[int32]string{
	0: "BLACK",
	1: "WHITE",
	2: "RED",
}
var CreateCarRequest_Color_value = map[string]int32{
	"BLACK": 0,
	"WHITE": 1,
	"RED":   2,
}

func (x CreateCarRequest_Color) String() string {
	return proto.EnumName(CreateCarRequest_Color_name, int32(x))
}
func (CreateCarRequest_Color) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Car struct {
	Identifier string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Car) Reset()                    { *m = Car{} }
func (m *Car) String() string            { return proto.CompactTextString(m) }
func (*Car) ProtoMessage()               {}
func (*Car) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Car) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Car) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateCarRequest struct {
	Name   string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Color  CreateCarRequest_Color `protobuf:"varint,2,opt,name=color,enum=car.CreateCarRequest_Color" json:"color,omitempty"`
	Cooler bool                   `protobuf:"varint,3,opt,name=cooler" json:"cooler,omitempty"`
}

func (m *CreateCarRequest) Reset()                    { *m = CreateCarRequest{} }
func (m *CreateCarRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateCarRequest) ProtoMessage()               {}
func (*CreateCarRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateCarRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateCarRequest) GetColor() CreateCarRequest_Color {
	if m != nil {
		return m.Color
	}
	return CreateCarRequest_BLACK
}

func (m *CreateCarRequest) GetCooler() bool {
	if m != nil {
		return m.Cooler
	}
	return false
}

type CreateCarResponse struct {
	Identifier string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
}

func (m *CreateCarResponse) Reset()                    { *m = CreateCarResponse{} }
func (m *CreateCarResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateCarResponse) ProtoMessage()               {}
func (*CreateCarResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateCarResponse) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

type ListCarRequest struct {
	Cooler bool `protobuf:"varint,1,opt,name=cooler" json:"cooler,omitempty"`
}

func (m *ListCarRequest) Reset()                    { *m = ListCarRequest{} }
func (m *ListCarRequest) String() string            { return proto.CompactTextString(m) }
func (*ListCarRequest) ProtoMessage()               {}
func (*ListCarRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ListCarRequest) GetCooler() bool {
	if m != nil {
		return m.Cooler
	}
	return false
}

type ListCarResponse struct {
	Cars []*Car `protobuf:"bytes,1,rep,name=cars" json:"cars,omitempty"`
}

func (m *ListCarResponse) Reset()                    { *m = ListCarResponse{} }
func (m *ListCarResponse) String() string            { return proto.CompactTextString(m) }
func (*ListCarResponse) ProtoMessage()               {}
func (*ListCarResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListCarResponse) GetCars() []*Car {
	if m != nil {
		return m.Cars
	}
	return nil
}

func init() {
	proto.RegisterType((*Car)(nil), "car.Car")
	proto.RegisterType((*CreateCarRequest)(nil), "car.CreateCarRequest")
	proto.RegisterType((*CreateCarResponse)(nil), "car.CreateCarResponse")
	proto.RegisterType((*ListCarRequest)(nil), "car.ListCarRequest")
	proto.RegisterType((*ListCarResponse)(nil), "car.ListCarResponse")
	proto.RegisterEnum("car.CreateCarRequest_Color", CreateCarRequest_Color_name, CreateCarRequest_Color_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Factory service

type FactoryClient interface {
	Build(ctx context.Context, in *CreateCarRequest, opts ...grpc.CallOption) (*CreateCarResponse, error)
	List(ctx context.Context, in *ListCarRequest, opts ...grpc.CallOption) (*ListCarResponse, error)
}

type factoryClient struct {
	cc *grpc.ClientConn
}

func NewFactoryClient(cc *grpc.ClientConn) FactoryClient {
	return &factoryClient{cc}
}

func (c *factoryClient) Build(ctx context.Context, in *CreateCarRequest, opts ...grpc.CallOption) (*CreateCarResponse, error) {
	out := new(CreateCarResponse)
	err := grpc.Invoke(ctx, "/car.Factory/Build", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *factoryClient) List(ctx context.Context, in *ListCarRequest, opts ...grpc.CallOption) (*ListCarResponse, error) {
	out := new(ListCarResponse)
	err := grpc.Invoke(ctx, "/car.Factory/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Factory service

type FactoryServer interface {
	Build(context.Context, *CreateCarRequest) (*CreateCarResponse, error)
	List(context.Context, *ListCarRequest) (*ListCarResponse, error)
}

func RegisterFactoryServer(s *grpc.Server, srv FactoryServer) {
	s.RegisterService(&_Factory_serviceDesc, srv)
}

func _Factory_Build_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FactoryServer).Build(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/car.Factory/Build",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FactoryServer).Build(ctx, req.(*CreateCarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Factory_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListCarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FactoryServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/car.Factory/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FactoryServer).List(ctx, req.(*ListCarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Factory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "car.Factory",
	HandlerType: (*FactoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Build",
			Handler:    _Factory_Build_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Factory_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "car.proto",
}

func init() { proto.RegisterFile("car.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xcd, 0xda, 0x6e, 0xeb, 0x13, 0x66, 0x8d, 0x3a, 0xca, 0x14, 0x29, 0x3d, 0x48, 0x4f,
	0x95, 0x75, 0x20, 0x78, 0x74, 0x75, 0xa2, 0xb8, 0x53, 0x10, 0x3c, 0xc7, 0x2c, 0x42, 0xa1, 0x36,
	0xf3, 0x35, 0x3b, 0xf8, 0xa7, 0xf8, 0xdf, 0x4a, 0xd3, 0xb2, 0xb5, 0x43, 0xd8, 0xed, 0xe5, 0x7b,
	0xbf, 0x97, 0xf7, 0x7d, 0x09, 0xb8, 0x82, 0x63, 0xbc, 0x46, 0xa5, 0x15, 0xb5, 0x04, 0xc7, 0xf0,
	0x1e, 0xac, 0x94, 0x23, 0xbd, 0x06, 0xc8, 0x56, 0xb2, 0xd0, 0xd9, 0x67, 0x26, 0xd1, 0x27, 0x01,
	0x89, 0x5c, 0xd6, 0x52, 0x28, 0x05, 0xbb, 0xe0, 0x5f, 0xd2, 0xef, 0x99, 0x8e, 0xa9, 0xc3, 0x5f,
	0x02, 0x5e, 0x8a, 0x92, 0x6b, 0x99, 0x72, 0x64, 0xf2, 0x7b, 0x23, 0x4b, 0xbd, 0x05, 0xc9, 0x0e,
	0xa4, 0x53, 0x70, 0x84, 0xca, 0x15, 0x9a, 0xe9, 0x51, 0x72, 0x19, 0x57, 0x1e, 0xf6, 0x27, 0xe3,
	0xb4, 0x42, 0x58, 0x4d, 0xd2, 0x31, 0xf4, 0x85, 0x52, 0xb9, 0x44, 0xdf, 0x0a, 0x48, 0x34, 0x64,
	0xcd, 0x29, 0xbc, 0x01, 0xc7, 0x70, 0xd4, 0x05, 0x67, 0xbe, 0x7c, 0x48, 0x5f, 0xbd, 0xa3, 0xaa,
	0x7c, 0x7f, 0x7e, 0x79, 0x5b, 0x78, 0x84, 0x0e, 0xc0, 0x62, 0x8b, 0x47, 0xaf, 0x17, 0xce, 0xe0,
	0xb4, 0xb5, 0xa0, 0x5c, 0xab, 0xa2, 0x94, 0x87, 0x42, 0x86, 0x11, 0x8c, 0x96, 0x59, 0xa9, 0x5b,
	0x69, 0x76, 0x36, 0x48, 0xc7, 0xc6, 0x2d, 0x9c, 0x6c, 0xc9, 0xe6, 0xf2, 0x2b, 0xb0, 0x05, 0xc7,
	0xd2, 0x27, 0x81, 0x15, 0x1d, 0x27, 0xc3, 0x3a, 0x23, 0x47, 0x66, 0xd4, 0x44, 0xc3, 0xe0, 0x89,
	0x0b, 0xad, 0xf0, 0x87, 0xde, 0x81, 0x33, 0xdf, 0x64, 0xf9, 0x8a, 0x5e, 0xfc, 0xfb, 0x0e, 0x93,
	0xf1, 0xbe, 0xdc, 0x2c, 0x98, 0x82, 0x5d, 0xed, 0xa4, 0x67, 0xa6, 0xdf, 0x35, 0x3a, 0x39, 0xef,
	0x8a, 0xf5, 0xc8, 0x47, 0xdf, 0x7c, 0xf4, 0xec, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x9b, 0xf5,
	0x3b, 0xf5, 0x01, 0x00, 0x00,
}
